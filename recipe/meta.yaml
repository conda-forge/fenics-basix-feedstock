{% set name = "fenics-basix" %}
{% set version = "0.9.0.dev" %}

package:
  name: {{ name|lower }}-meta
  version: {{ version }}

source:
  # url: https://github.com/fenics/basix/archive/refs/tags/v{{ version }}.tar.gz
  # sha256: b299af82daf8fa3e4845e17f202491fe71b313bf6ab64c767a5287190b3dd7fe
  url: https://github.com/fenics/basix/archive/f32916ee2bcf0e8020fa242f3233abfda2336202.tar.gz
    

build:
  skip: true  # [python_impl == 'pypy' or py<39]
  number: 0
  force_use_keys:
    # separate builds for each Python
    # this duplicates libbasix outputs, but results in faster builds
    - python

outputs:
  - name: fenics-libbasix
    script: build-libbasix.sh  # [not win]
    script: build-libbasix.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage("fenics-libbasix", max_pin="x.x.x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - make  # [unix]
        - pkg-config
      host:
        - libblas
        - libcblas  # not linked, but needed for FindLAPACK during build
        - liblapack
    test:
      commands:
        - test -f $PREFIX/lib/libbasix${SHLIB_EXT}  # [not win]
        - if exist %LIBRARY_PREFIX%\bin\basix.dll (exit 0) else (exit 1)  # [win]

  - name: fenics-basix
    script: build-basix-py.sh  # [not win]
    script: build-basix-py.bat  # [win]
    build:
      run_exports:
        strong_constrains:
          - {{ pin_compatible("nanobind", max_pin="x.x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
        - cmake
        - make
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - nanobind                               # [build_platform != target_platform]
      host:
        - scikit-build-core
        - python
        - pip
        - nanobind
        # - nanobind-abi
        - {{ pin_subpackage('fenics-libbasix', exact=True) }}
      run:
        - python
        - {{ pin_subpackage('fenics-libbasix', exact=True) }}
        - numpy
      run_constrained:
        # nanobind doens't yet have an abi metapacakage,
        # but hope it doesn't get bumped in patch releases
        - {{ pin_compatible("nanobind", max_pin="x.x") }}
    test:
      requires:
        - pytest
        - pytest-xdist
      source_files:
        - test
      imports:
        - basix
      commands:
        - pytest -v test/test_create.py

about:
  home: https://fenicsproject.org
  summary: Basix is a finite element definition and tabulation runtime library
  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://docs.fenicsproject.org/basix/main/
  dev_url: https://github.com/fenics/basix

extra:
  feedstock-name: fenics-basix
  recipe-maintainers:
    - minrk
